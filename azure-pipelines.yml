# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core


trigger:
  tags:
      include:
        - release/*  

pool:
  vmImage: 'windows-latest'

variables:
  serverProject: 'Server/LeaderPivot.BlazorDemo.Server/LeaderPivot.BlazorDemo.Server.csproj'
  wasmProject: 'WASM/LeaderPivot.BlazorDemo/LeaderPivot.BlazorDemo/LeaderPivot.BlazorDemo.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# nbgv need a deep clone

- checkout: self
  fetchDepth: 0

# install nbgv tooling

- task: DotNetCoreCLI@2  
  displayName: Install NBGV tool
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv

# allow nbgv to set the version

- script: nbgv cloud
  displayName: Set Version

- task: UseDotNet@2
  displayName: 'Use dotnet 8'
  inputs:
    packageType: 'sdk'
    version: '8.x'

- task: DotNetCoreCLI@2
  displayName: 'DotNet Restore NuGet packages'
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: 'LeaderAnalyticsFeed'
    includeNuGetOrg: true
    projects: '**/*.csproj'

- script: dotnet build $(serverProject) --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    projects: $(serverProject)

- task: AzureRmWebAppDeployment@4
  displayName: 'AzureRmWebAppDeployment@4'
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'All Azure Services'
    appType: webApp
    WebAppName: 'LeaderAnalyticsWeb'
    VirtualApplication: '/blazor'
    packageforLinux: '$(Build.ArtifactStagingDirectory)/*.zip'